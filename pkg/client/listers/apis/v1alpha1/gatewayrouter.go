/*
Copyright (c) 2024 OpenInfra Foundation Europe

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/lioneljouin/meridio-experiment/apis/v1alpha1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// GatewayRouterLister helps list GatewayRouters.
// All objects returned here must be treated as read-only.
type GatewayRouterLister interface {
	// List lists all GatewayRouters in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.GatewayRouter, err error)
	// GatewayRouters returns an object that can list and get GatewayRouters.
	GatewayRouters(namespace string) GatewayRouterNamespaceLister
	GatewayRouterListerExpansion
}

// gatewayRouterLister implements the GatewayRouterLister interface.
type gatewayRouterLister struct {
	listers.ResourceIndexer[*v1alpha1.GatewayRouter]
}

// NewGatewayRouterLister returns a new GatewayRouterLister.
func NewGatewayRouterLister(indexer cache.Indexer) GatewayRouterLister {
	return &gatewayRouterLister{listers.New[*v1alpha1.GatewayRouter](indexer, v1alpha1.Resource("gatewayrouter"))}
}

// GatewayRouters returns an object that can list and get GatewayRouters.
func (s *gatewayRouterLister) GatewayRouters(namespace string) GatewayRouterNamespaceLister {
	return gatewayRouterNamespaceLister{listers.NewNamespaced[*v1alpha1.GatewayRouter](s.ResourceIndexer, namespace)}
}

// GatewayRouterNamespaceLister helps list and get GatewayRouters.
// All objects returned here must be treated as read-only.
type GatewayRouterNamespaceLister interface {
	// List lists all GatewayRouters in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.GatewayRouter, err error)
	// Get retrieves the GatewayRouter from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.GatewayRouter, error)
	GatewayRouterNamespaceListerExpansion
}

// gatewayRouterNamespaceLister implements the GatewayRouterNamespaceLister
// interface.
type gatewayRouterNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.GatewayRouter]
}
